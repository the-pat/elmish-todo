{"version":3,"sources":["webpack:///./src/.fable/fable-library.3.1.5/Util.js","webpack:///./src/.fable/fable-library.3.1.5/Types.js","webpack:///./src/.fable/fable-library.3.1.5/Reflection.js","webpack:///./src/.fable/fable-library.3.1.5/Int32.js","webpack:///./src/.fable/fable-library.3.1.5/Numeric.js","webpack:///./src/.fable/fable-library.3.1.5/lib/long.js","webpack:///./src/.fable/fable-library.3.1.5/Date.js","webpack:///./src/.fable/fable-library.3.1.5/String.js","webpack:///./src/.fable/fable-library.3.1.5/Guid.js","webpack:///./src/.fable/fable-library.3.1.5/Option.js","webpack:///./src/.fable/fable-library.3.1.5/lib/big.js","webpack:///./src/.fable/fable-library.3.1.5/Decimal.js","webpack:///./src/.fable/fable-library.3.1.5/Seq.js","webpack:///./src/.fable/fable-library.3.1.5/List.js","webpack:///./src/.fable/fable-library.3.1.5/AsyncBuilder.js","webpack:///./src/.fable/fable-library.3.1.5/Async.js","webpack:///./src/.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./src/.fable/Feliz.Bulma.2.11.0/ElementBuilders.fs.js","webpack:///./src/.fable/Feliz.1.37.0/Interop.fs.js","webpack:///./src/.fable/Feliz.1.37.0/Key.fs.js","webpack:///./src/.fable/Feliz.Bulma.2.11.0/Operators.fs.js","webpack:///./src/.fable/Feliz.1.37.0/React.fs.js","webpack:///./src/.fable/Feliz.1.37.0/ReactInterop.js","webpack:///./src/.fable/Fable.Promise.2.0.0/Promise.fs.js","webpack:///./src/.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js","webpack:///./src/.fable/Feliz.UseElmish.1.5.1/UseElmish.fs.js","webpack:///./src/.fable/fable-library.3.1.5/Array.js","webpack:///./src/Todo.fs.js","webpack:///./src/.fable/Feliz.1.37.0/Properties.fs.js","webpack:///./src/Main.fs.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["isArrayLike","x","Array","isArray","ArrayBuffer","isView","sameConstructor","y","Object","getPrototypeOf","constructor","dateOffset","date","date1","offset","kind","getTimezoneOffset","ObjectRef","o","idMap","has","set","count","get","stringHash","s","i","h","len","length","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","max","comparer","createObj","fields","obj","kv","seqToString","self","str","toString","callStack","Symbol","iterator","cons","entries","join","name","String","compareList","other","tail","res","head","WeakMap","List","this","cur","next","value","done","from","Union","concat","withParens","field","indexOf","splice","tag","cases","Record","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","NumberStyles","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","gen","endsWith","Error","symbol","wasm","WebAssembly","Instance","Module","Uint8Array","exports","e","Long","low","high","unsigned","isLong","prototype","radix","toJSON","multiply","toPrecision","sd","substr","toExponential","dp","toFixed","toHex","bytes","le","fromBytesLE","fromBytesBE","fromBytes","$this","hi","lo","toBytesLE","toBytesBE","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","p","substring","radixToPower","size","min","parseInt","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","DateTime","d","utcNow","now","ts","newDate","oldTzOffset","newTzOffset","addHours","addMonths","newMonth","getUTCMonth","getMonth","month","newMonth_","yearOffset","newYear","getUTCFullYear","getFullYear","year","_daysInMonth","isLeapYear","daysInMonth","day","m","ms","dateValue","UTC","setFullYear","create","getUTCDate","getDate","getUTCHours","getHours","hour","getUTCMinutes","getMinutes","minute","getUTCSeconds","getSeconds","second","getUTCMilliseconds","getMilliseconds","millisecond","delimiter","xs","newGuid","b","a","random","Some","some","toArray","opt","defaultArg","defaultValue","P","_this","Number","c","cmp","MAX_DP","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","UNDEFINED","NUMERIC","parse","n","nl","test","charAt","slice","replace","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","idx","unshift","pop","stringify","k","z","push","NE","PE","abs","isneg","yc","l","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","one","sqrt","half","valueOf","_Big_","normalize","version","Decimal","Seq","f","_a","iter","makeSeq","append","ys","delay","firstDone","iters","undefined","unfold","_b","empty","singleton","fold","acc","isArrayOrBufferView","iterate","_","fst","f_mut","state_mut","xs_mut","state","List_1","ofSeq","fold_1","unitVar0","ofArray","tail_1","col","ofArrayWithTail","filter","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","$","addListener","Dispose","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","isCancellationRequested","token","Cmd_none","Helpers_combineClasses","cn","tupledArg","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","uncurry","classes","props","matchValue","Helpers_extractClasses","computation","binder","onSuccess","ex","protectedBind","computation1","computation2","Bind","generator","sequence","body","While","Delay","protectedReturn","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","Interop_reactApi","react","key_create","key_enter","op_PlusPlus","prop1","prop2","arg","_arg1","value_1","ReactInterop_useEffectWithDeps","getDisposable","deps","useEffectReact","disposable","React_createDisposable_3A5B6456","dispose","useReact_useEffect_Z5234A374","effect","dependencies","useReact_useRef_1505","initialValue","useReact_useCallbackRef_7C4B0DD6","callback","callbackFunction","lastRenderCallbackRef","callbackRef","current","useLayoutEffectReact","PromiseBuilder__While_2044D34","then","Promise","resolve","PromiseBuilder__Delay_62FBFDE1","f1","f2","er","reject","er_1","catch","er_2","er_3","promise","RingState$1","RingBuffer$1","target","fill","targetIndex","RingBuffer$1__Pop","wix","rix","items","rix$0027","useFeliz_React__React_useElmish_Static_17DC4F1D","init","update","initial","token_1","ring","patternInput","cts","createCancellationToken","cancel","setChildState_1","setTimeout","dispatch_1","dispatch","msg","nextMsg","patternInput_1","success","fail","iterate_1","_arg4","useReact_useEffect_Z101E1A95","sub_1","_arg3","Filter","TodoBeingEdited","Id","Description","Todo","CompletedOn","CreatedOn","State","TodoList","NewTodo","Msg","copyOfStruct","copyOfStruct_1","copyOfStruct_2","appTitle","__html","createElement","inputField","props_2","value_6","props_7","props_5","props_9","ev","ev_1","handler","pressedKey","toLocaleLowerCase","ctrlKey","shiftKey","PropHelpers_createOnKey","_arg2","className","todoList","projection","xs_1","sortedTodoList","todo_1","todo","Compare","children","map_1","todo_2","pattern_matching_result","todoBeingEdited_1","matchValue_1","uneditedTodoDescription","todoBeingEdited","props_11","elms","props_8","elms_1","append_1","singleton_1","renderEditForm","props_15","props_13","props_4","props_10","elms_2","renderTodo","renderFilterTabs","props_1","App","createFunction","useReact_useMemo_CF4EA67","useFeliz_React__React_useElmish_Static_645B1FB7","todo_3","todo_4","todo_5","state_1","style","padding","render","document","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","prop","hasOwnProperty","call","installedChunks","143","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","apply","chunkLoadingGlobal","checkDeferredModulesImpl","deferredModule","fulfilled","depId","forEach","bind","startup"],"mappings":"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","file":"app.568200a04415286c371e.js","sourcesContent":["// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { FSharpRef, toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep, padRef) {\n    return str2.replace(fsFormatRegExp, (match, prefix, flags, padLength, precision, format) => {\n        if (padRef.contents != null) {\n            padLength = padRef.contents;\n            padRef.contents = null;\n        }\n        else if (padLength === \"*\") {\n            if (rep < 0) {\n                throw new Error(\"Non-negative number required\");\n            }\n            padRef.contents = rep;\n            return match;\n        }\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont, padRef = new FSharpRef(null)) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg, padRef);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont, padRef)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    const firstNum = first.charCodeAt(0);\n    const lastNum = last.charCodeAt(0);\n    return delay(() => unfold((x) => x <= lastNum ? [String.fromCharCode(x), x + 1] : undefined, firstNum));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    return reverse(fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs));\n}\n\nexport function concat(lists) {\n    return reverse(fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists));\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                acc_mut = (new List_1(matchValue[0], acc));\n                state_1_mut = matchValue[1];\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    return ofSeq(scan_1(f, state, xs));\n}\n\nexport function scanBack(f, xs, state) {\n    return ofSeq(scanBack_1(f, xs, state));\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    return ofSeq(collect_1(f, xs));\n}\n\nexport function map(f, xs) {\n    return reverse(fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs));\n}\n\nexport function mapIndexed(f, xs) {\n    return reverse(foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs));\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    return reverse(fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    return reverse(foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function map3(f, xs, ys, zs) {\n    return reverse(fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    return reverse(foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    return fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    return foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    return foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    return find(f, reverse(xs));\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFind(f, reverse(xs));\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, Array.from(xs));\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        return matchValue | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    return findIndexBack_1(f, Array.from(xs));\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    return reverse(fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs));\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    return reverse(fold((acc, x) => {\n        const matchValue = f(x);\n        return (matchValue == null) ? acc : (new List_1(value_1(matchValue), acc));\n    }, new List_1(), xs));\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(x, y))), xs_1)));\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y)))), xs_1)));\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1))), xs_1)));\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1))), xs_1)));\n}\n\nexport function sortWith(comparer, xs) {\n    let comparer_1, xs_1;\n    return ofArray((comparer_1 = comparer, (xs_1 = Array.from(xs), (xs_1.sort(comparer_1), xs_1))));\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs), length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs), length(xs));\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, Array.from(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return map((xs_2) => ofArray(xs_2), ofArray(chunkBySize_1(chunkSize, Array.from(xs))));\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(false, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (value_1(upper) < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        const res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= value_1(upper))) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (value_1(upper) > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, keys);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, keys);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    return ofSeq(pairwise_1(source));\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    return map((xs_1) => ofArray(xs_1), ofArray(splitInto_1(chunks, Array.from(source))));\n}\n\nexport function transpose(lists) {\n    return ofSeq(map_1((xs) => ofSeq(xs), transpose_1(lists)));\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.5/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.5/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.5/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.1.5/List.js\";\nimport { uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { toString } from \"../fable-library.3.1.5/Types.js\";\nimport { join } from \"../fable-library.3.1.5/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { some } from \"../fable-library.3.1.5/Option.js\";\nimport { create, isLeapYear } from \"../fable-library.3.1.5/Date.js\";\nimport { parse } from \"../fable-library.3.1.5/Int32.js\";\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.1.5/String.js\";\nimport { equalsWith } from \"../fable-library.3.1.5/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.1.5/Util.js\";\nimport react from \"react\";\n\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\n    if ((input >= x) ? (input <= y) : false) {\n        return some(void 0);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function DateParsing_isLeapYear(year) {\n    return isLeapYear(year);\n}\n\nexport function DateParsing_$007CInt$007C_$007C(input) {\n    try {\n        return parse(input, 511, false, 32);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function DateParsing_parse(input) {\n    try {\n        if (isNullOrWhiteSpace(input)) {\n            return void 0;\n        }\n        else {\n            const parts = split(input, [\"-\"], null, 0);\n            let patternInput;\n            let pattern_matching_result, month, year;\n            if ((!equalsWith((x, y) => comparePrimitives(x, y), parts, null)) ? (parts.length === 2) : false) {\n                const activePatternResult3133 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                if (activePatternResult3133 != null) {\n                    const activePatternResult3134 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                    if (activePatternResult3134 != null) {\n                        pattern_matching_result = 0;\n                        month = activePatternResult3134;\n                        year = activePatternResult3133;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    patternInput = [year, month, 1, 0, 0];\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_1, day, month_1, year_1;\n                    if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), parts, null)) ? (parts.length === 3) : false) {\n                        const activePatternResult3130 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                        if (activePatternResult3130 != null) {\n                            const activePatternResult3131 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                            if (activePatternResult3131 != null) {\n                                const activePatternResult3132 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                                if (activePatternResult3132 != null) {\n                                    pattern_matching_result_1 = 0;\n                                    day = activePatternResult3132;\n                                    month_1 = activePatternResult3131;\n                                    year_1 = activePatternResult3130;\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            patternInput = [year_1, month_1, day, 0, 0];\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_2, day_1, month_2, year_2;\n                            if ((!equalsWith((x_2, y_2) => comparePrimitives(x_2, y_2), parts, null)) ? (parts.length === 3) : false) {\n                                const activePatternResult3128 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                                if (activePatternResult3128 != null) {\n                                    const activePatternResult3129 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                                    if (activePatternResult3129 != null) {\n                                        pattern_matching_result_2 = 0;\n                                        day_1 = parts[2];\n                                        month_2 = activePatternResult3129;\n                                        year_2 = activePatternResult3128;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    if (day_1.indexOf(\"T\") >= 0) {\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\n                                        let pattern_matching_result_3, parsedDay, time;\n                                        if ((!equalsWith((x_3, y_3) => comparePrimitives(x_3, y_3), matchValue, null)) ? (matchValue.length === 2) : false) {\n                                            const activePatternResult3127 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                                            if (activePatternResult3127 != null) {\n                                                pattern_matching_result_3 = 0;\n                                                parsedDay = activePatternResult3127;\n                                                time = matchValue[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_3 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                        switch (pattern_matching_result_3) {\n                                            case 0: {\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\n                                                let pattern_matching_result_4, hour, minute;\n                                                if ((!equalsWith((x_4, y_4) => comparePrimitives(x_4, y_4), matchValue_1, null)) ? (matchValue_1.length === 2) : false) {\n                                                    const activePatternResult3125 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                                    if (activePatternResult3125 != null) {\n                                                        const activePatternResult3126 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                                        if (activePatternResult3126 != null) {\n                                                            pattern_matching_result_4 = 0;\n                                                            hour = activePatternResult3125;\n                                                            minute = activePatternResult3126;\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_4 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_4 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_4 = 1;\n                                                }\n                                                switch (pattern_matching_result_4) {\n                                                    case 0: {\n                                                        const matchValue_2 = [hour, minute];\n                                                        let pattern_matching_result_5;\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                                                pattern_matching_result_5 = 0;\n                                                            }\n                                                            else {\n                                                                pattern_matching_result_5 = 1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_5 = 1;\n                                                        }\n                                                        switch (pattern_matching_result_5) {\n                                                            case 0: {\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                                                break;\n                                                            }\n                                                            case 1: {\n                                                                patternInput = [-1, 1, 1, 0, 0];\n                                                                break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 1: {\n                                                        patternInput = [-1, 1, 1, 0, 0];\n                                                        break;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            case 1: {\n                                                patternInput = [-1, 1, 1, 0, 0];\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        patternInput = [-1, 1, 1, 0, 0];\n                                    }\n                                    break;\n                                }\n                                case 1: {\n                                    patternInput = [-1, 1, 1, 0, 0];\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            const year_3 = patternInput[0] | 0;\n            const month_3 = patternInput[1] | 0;\n            const minute_1 = patternInput[4] | 0;\n            const hour_1 = patternInput[3] | 0;\n            const day_2 = patternInput[2] | 0;\n            if (year_3 <= 0) {\n                return void 0;\n            }\n            else {\n                const matchValue_3 = [month_3, day_2];\n                let pattern_matching_result_6;\n                if (matchValue_3[0] === 2) {\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n                        if (DateParsing_isLeapYear(year_3)) {\n                            pattern_matching_result_6 = 0;\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_6 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_6 = 1;\n                }\n                switch (pattern_matching_result_6) {\n                    case 0: {\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                    }\n                    case 1: {\n                        let pattern_matching_result_7;\n                        if (matchValue_3[0] === 2) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                                if (!DateParsing_isLeapYear(year_3)) {\n                                    pattern_matching_result_7 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_7 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_7 = 1;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                            }\n                            case 1: {\n                                let pattern_matching_result_8;\n                                if (matchValue_3[0] === 1) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 3) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 5) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 7) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 8) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 10) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 12) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_9;\n                                        if (matchValue_3[0] === 4) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 6) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 9) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 11) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                        switch (pattern_matching_result_9) {\n                                            case 0: {\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                            }\n                                            case 1: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (matchValue_4) {\n        return void 0;\n    }\n}\n\nexport const Interop_reactApi = react;\n\n","\nfunction key_create(key) {\n    return [key, false, false];\n}\n\nexport const key_enter = key_create(\"Enter\");\n\nexport const key_one = key_create(\"1\");\n\nexport const key_two = key_create(\"2\");\n\nexport const key_three = key_create(\"3\");\n\nexport const key_four = key_create(\"4\");\n\nexport const key_five = key_create(\"5\");\n\nexport const key_six = key_create(\"6\");\n\nexport const key_seven = key_create(\"7\");\n\nexport const key_eight = key_create(\"8\");\n\nexport const key_nine = key_create(\"9\");\n\nexport const key_zero = key_create(\"0\");\n\nexport const key_backspace = key_create(\"Backspace\");\n\nexport const key_plus = key_create(\"+\");\n\nexport const key_minus = key_create(\"-\");\n\nexport const key_space = key_create(\" \");\n\nexport const key_tilde = key_create(\"~\");\n\nexport const key_backtick = key_create(\"`\");\n\nexport const key_a = key_create(\"a\");\n\nexport const key_b = key_create(\"b\");\n\nexport const key_c = key_create(\"c\");\n\nexport const key_d = key_create(\"d\");\n\nexport const key_e = key_create(\"e\");\n\nexport const key_f = key_create(\"f\");\n\nexport const key_g = key_create(\"g\");\n\nexport const key_h = key_create(\"h\");\n\nexport const key_i = key_create(\"i\");\n\nexport const key_j = key_create(\"j\");\n\nexport const key_k = key_create(\"k\");\n\nexport const key_l = key_create(\"l\");\n\nexport const key_m = key_create(\"m\");\n\nexport const key_n = key_create(\"n\");\n\nexport const key_o = key_create(\"p\");\n\nexport const key_p = key_create(\"p\");\n\nexport const key_q = key_create(\"q\");\n\nexport const key_r = key_create(\"r\");\n\nexport const key_s = key_create(\"s\");\n\nexport const key_t = key_create(\"t\");\n\nexport const key_u = key_create(\"u\");\n\nexport const key_v = key_create(\"v\");\n\nexport const key_w = key_create(\"w\");\n\nexport const key_x = key_create(\"x\");\n\nexport const key_y = key_create(\"y\");\n\nexport const key_z = key_create(\"z\");\n\nexport function key_ctrl(key) {\n    const patternInput = key;\n    return [patternInput[0], true, patternInput[2]];\n}\n\nexport function key_shift(key) {\n    const patternInput = key;\n    return [patternInput[0], patternInput[1], true];\n}\n\nexport function key_ctrlAndShift(key) {\n    return [key[0], true, true];\n}\n\n","import { join } from \"../fable-library.3.1.5/String.js\";\nimport { ofArray, choose } from \"../fable-library.3.1.5/List.js\";\nimport { toString } from \"../fable-library.3.1.5/Types.js\";\n\nexport function op_PlusPlus(prop1, prop2) {\n    return [\"className\", join(\" \", choose((arg) => {\n        const _arg1 = arg;\n        if (_arg1[0] === \"className\") {\n            return toString(_arg1[1]);\n        }\n        else {\n            return void 0;\n        }\n    }, ofArray([prop1, prop2])))];\n}\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { iterate } from \"../fable-library.3.1.5/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.1.5/Option.js\";\nimport { Interop_reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n(() => {\n})();\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return Interop_reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    return Interop_reactApi.useReducer(update, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return Interop_reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return Interop_reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        let o;\n        return Interop_reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        let o;\n        return Interop_reactApi.createElement(forwardRefType, (o = {\n            props: tupledArg[0],\n            ref: tupledArg[1],\n        }, Object.assign({}, o)));\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return Interop_reactApi.useState(initial);\n}\n\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\n\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.1.5/Choice.js\";\nimport { class_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { getEnumerator } from \"../fable-library.3.1.5/Seq.js\";\nimport { equals } from \"../fable-library.3.1.5/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { PromiseBuilder_$ctor } from \"./Promise.fs.js\";\n\nexport const promise = PromiseBuilder_$ctor();\n\n","import { Union } from \"../fable-library.3.1.5/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.5/Array.js\";\nimport { isDisposable, comparePrimitives, max } from \"../fable-library.3.1.5/Util.js\";\nimport { toArray, value as value_1, some } from \"../fable-library.3.1.5/Option.js\";\nimport { iterate as iterate_1, rangeNumber, singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.5/Seq.js\";\nimport { useReact_useMemo_CF4EA67, useReact_useEffect_3A5B6456, useReact_useEffect_Z101E1A95, useReact_useEffect_Z5234A374, useReact_useCallbackRef_7C4B0DD6, React_createDisposable_3A5B6456, useReact_useEffectOnce_Z5ECA432F, useFeliz_React__React_useState_Static_1505, useReact_useRef_1505 } from \"../Feliz.1.37.0/React.fs.js\";\nimport { isCancellationRequested, cancel, createCancellationToken } from \"../fable-library.3.1.5/Async.js\";\nimport { PromiseBuilder__While_2044D34, PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { iterate } from \"../fable-library.3.1.5/List.js\";\nimport { promise } from \"../Fable.Promise.2.0.0/PromiseImpl.fs.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Feliz.UseElmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Feliz.UseElmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(_) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            _.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            _.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(_, item) {\n    const matchValue = _.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            _.state = (new RingState$1(1, RingBuffer$1__doubleSize(_, rix, items_1), items_1.length, 0));\n        }\n        else {\n            _.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        _.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeNumber(0, 1, items.length))))))));\n}\n\nexport function useFeliz_React__React_useElmish_Static_17DC4F1D(init, update, dependencies) {\n    const state = useReact_useRef_1505(init[0]);\n    const ring = useReact_useRef_1505(RingBuffer$1_$ctor_Z524259A4(10));\n    const patternInput = useFeliz_React__React_useState_Static_1505(init[0]);\n    let token_1;\n    const cts = useReact_useRef_1505(createCancellationToken());\n    const token = useReact_useRef_1505(cts.current);\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\n        cancel(cts.current);\n    }));\n    token_1 = token;\n    const setChildState_1 = () => {\n        void setTimeout(() => {\n            let copyOfStruct;\n            if (!(copyOfStruct = token_1.current, isCancellationRequested(copyOfStruct))) {\n                patternInput[1](state.current);\n            }\n        }, 0);\n    };\n    const dispatch = (msg) => {\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n            let nextMsg = some(msg);\n            return PromiseBuilder__While_2044D34(promise, () => {\n                let copyOfStruct_1;\n                return (nextMsg != null) ? (!(copyOfStruct_1 = token_1.current, isCancellationRequested(copyOfStruct_1))) : false;\n            }, PromiseBuilder__Delay_62FBFDE1(promise, () => {\n                const patternInput_1 = update(value_1(nextMsg), state.current);\n                iterate((sub) => {\n                    sub(dispatch);\n                }, patternInput_1[1]);\n                nextMsg = RingBuffer$1__Pop(ring.current);\n                state.current = patternInput_1[0];\n                setChildState_1();\n                return Promise.resolve();\n            }));\n        }));\n        pr.then();\n    };\n    const dispatch_1 = useReact_useCallbackRef_7C4B0DD6(dispatch);\n    useReact_useEffect_Z5234A374(() => React_createDisposable_3A5B6456(() => {\n        let matchValue;\n        iterate_1((o) => {\n            o.Dispose();\n        }, toArray((matchValue = state.current, isDisposable(matchValue) ? matchValue : (void 0))));\n    }), dependencies);\n    useReact_useEffect_Z101E1A95(() => {\n        state.current = init[0];\n        setChildState_1();\n        iterate((sub_1) => {\n            sub_1(dispatch_1);\n        }, init[1]);\n    }, dependencies);\n    useReact_useEffect_3A5B6456(() => {\n        iterate_1(dispatch_1, toArray(RingBuffer$1__Pop(ring.current)));\n    });\n    return [patternInput[0], dispatch_1];\n}\n\nexport function useFeliz_React__React_useElmish_Static_645B1FB7(init, update, dependencies) {\n    return useFeliz_React__React_useElmish_Static_17DC4F1D(useReact_useMemo_CF4EA67(init, dependencies), update, dependencies);\n}\n\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const key = projection(array[idx]);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        void (array.push(x));\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    return map((x_1) => value_2(chooser(x_1)), array.filter(((x) => (chooser(x) != null))), cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { Record, Union } from \"./.fable/fable-library.3.1.5/Types.js\";\nimport { list_type, option_type, record_type, string_type, class_type, union_type } from \"./.fable/fable-library.3.1.5/Reflection.js\";\nimport { newGuid } from \"./.fable/fable-library.3.1.5/Guid.js\";\nimport { addHours, addMonths, addDays, utcNow } from \"./.fable/fable-library.3.1.5/Date.js\";\nimport { sortBy, ofSeq, cons, singleton, append, map, filter, ofArray } from \"./.fable/fable-library.3.1.5/List.js\";\nimport { Cmd_none } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { createElement } from \"react\";\nimport { compareArrays, equals, createObj } from \"./.fable/fable-library.3.1.5/Util.js\";\nimport { Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.11.0/ElementBuilders.fs.js\";\nimport { Interop_reactApi } from \"./.fable/Feliz.1.37.0/Interop.fs.js\";\nimport { PropHelpers_createOnKey } from \"./.fable/Feliz.1.37.0/Properties.fs.js\";\nimport { key_enter } from \"./.fable/Feliz.1.37.0/Key.fs.js\";\nimport { op_PlusPlus } from \"./.fable/Feliz.Bulma.2.11.0/Operators.fs.js\";\nimport { join } from \"./.fable/fable-library.3.1.5/String.js\";\nimport { map as map_1, empty, singleton as singleton_1, append as append_1, delay } from \"./.fable/fable-library.3.1.5/Seq.js\";\nimport { useFeliz_React__React_useElmish_Static_645B1FB7 } from \"./.fable/Feliz.UseElmish.1.5.1/UseElmish.fs.js\";\n\nclass Filter extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"All\", \"Completed\", \"NotCompleted\"];\n    }\n}\n\nfunction Filter$reflection() {\n    return union_type(\"Todo.Filter\", [], Filter, () => [[], [], []]);\n}\n\nclass TodoBeingEdited extends Record {\n    constructor(Id, Description) {\n        super();\n        this.Id = Id;\n        this.Description = Description;\n    }\n}\n\nfunction TodoBeingEdited$reflection() {\n    return record_type(\"Todo.TodoBeingEdited\", [], TodoBeingEdited, () => [[\"Id\", class_type(\"System.Guid\")], [\"Description\", string_type]]);\n}\n\nclass Todo extends Record {\n    constructor(Id, Description, CompletedOn, CreatedOn, TodoBeingEdited) {\n        super();\n        this.Id = Id;\n        this.Description = Description;\n        this.CompletedOn = CompletedOn;\n        this.CreatedOn = CreatedOn;\n        this.TodoBeingEdited = TodoBeingEdited;\n    }\n}\n\nfunction Todo$reflection() {\n    return record_type(\"Todo.Todo\", [], Todo, () => [[\"Id\", class_type(\"System.Guid\")], [\"Description\", string_type], [\"CompletedOn\", option_type(class_type(\"System.DateTime\"))], [\"CreatedOn\", class_type(\"System.DateTime\")], [\"TodoBeingEdited\", option_type(TodoBeingEdited$reflection())]]);\n}\n\nclass State extends Record {\n    constructor(TodoList, NewTodo, Filter) {\n        super();\n        this.TodoList = TodoList;\n        this.NewTodo = NewTodo;\n        this.Filter = Filter;\n    }\n}\n\nfunction State$reflection() {\n    return record_type(\"Todo.State\", [], State, () => [[\"TodoList\", list_type(Todo$reflection())], [\"NewTodo\", string_type], [\"Filter\", Filter$reflection()]]);\n}\n\nclass Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SetNewTodo\", \"AddNewTodo\", \"ToggleCompleted\", \"DeleteTodo\", \"CancelEdit\", \"ApplyEdit\", \"StartEditingTodo\", \"SetEditedDescription\", \"SetFilter\"];\n    }\n}\n\nfunction Msg$reflection() {\n    return union_type(\"Todo.Msg\", [], Msg, () => [[[\"Item\", string_type]], [], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item\", class_type(\"System.Guid\")]], [[\"Item1\", class_type(\"System.Guid\")], [\"Item2\", string_type]], [[\"Item\", Filter$reflection()]]]);\n}\n\nfunction init() {\n    let copyOfStruct, copyOfStruct_1, copyOfStruct_2;\n    return [new State(ofArray([new Todo(newGuid(), \"Learn F#\", (copyOfStruct = utcNow(), addDays(copyOfStruct, -1)), (copyOfStruct_1 = utcNow(), addMonths(copyOfStruct_1, -1)), void 0), new Todo(newGuid(), \"Learn Elmish\", void 0, (copyOfStruct_2 = utcNow(), addHours(copyOfStruct_2, -3)), void 0)]), \"\", new Filter(2)), Cmd_none()];\n}\n\nfunction update(msg, state) {\n    let pattern_matching_result;\n    if (msg.tag === 0) {\n        pattern_matching_result = 0;\n    }\n    else if (msg.tag === 3) {\n        pattern_matching_result = 1;\n    }\n    else if (msg.tag === 2) {\n        pattern_matching_result = 2;\n    }\n    else if (msg.tag === 1) {\n        if (state.NewTodo === \"\") {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n    }\n    else {\n        pattern_matching_result = 4;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [new State(state.TodoList, msg.fields[0], state.Filter), Cmd_none()];\n        }\n        case 1: {\n            return [new State(filter((todo) => (todo.Id !== msg.fields[0]), state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n        }\n        case 2: {\n            return [new State(map((todo_1) => {\n                if (todo_1.Id === msg.fields[0]) {\n                    return new Todo(todo_1.Id, todo_1.Description, (todo_1.CompletedOn == null) ? utcNow() : (void 0), todo_1.CreatedOn, todo_1.TodoBeingEdited);\n                }\n                else {\n                    return todo_1;\n                }\n            }, state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n        }\n        case 3: {\n            return [state, Cmd_none()];\n        }\n        case 4: {\n            switch (msg.tag) {\n                case 1: {\n                    return [new State(append(state.TodoList, singleton(new Todo(newGuid(), state.NewTodo, void 0, utcNow(), void 0))), \"\", state.Filter), Cmd_none()];\n                }\n                case 6: {\n                    return [new State(map((todo_2) => {\n                        if (todo_2.Id === msg.fields[0]) {\n                            return new Todo(todo_2.Id, todo_2.Description, todo_2.CompletedOn, todo_2.CreatedOn, new TodoBeingEdited(todo_2.Id, todo_2.Description));\n                        }\n                        else {\n                            return todo_2;\n                        }\n                    }, state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n                }\n                case 4: {\n                    return [new State(map((todo_3) => {\n                        if (todo_3.Id === msg.fields[0]) {\n                            return new Todo(todo_3.Id, todo_3.Description, todo_3.CompletedOn, todo_3.CreatedOn, void 0);\n                        }\n                        else {\n                            return todo_3;\n                        }\n                    }, state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n                }\n                case 5: {\n                    return [new State(map((todo_4) => {\n                        if (todo_4.Id === msg.fields[0]) {\n                            const matchValue = todo_4.TodoBeingEdited;\n                            if (matchValue != null) {\n                                if (matchValue.Description === \"\") {\n                                    const todoBeingEdited_1 = matchValue;\n                                    return todo_4;\n                                }\n                                else if (matchValue != null) {\n                                    return new Todo(todo_4.Id, matchValue.Description, todo_4.CompletedOn, todo_4.CreatedOn, void 0);\n                                }\n                                else {\n                                    throw (new Error(\"The match cases were incomplete\"));\n                                }\n                            }\n                            else {\n                                return todo_4;\n                            }\n                        }\n                        else {\n                            return todo_4;\n                        }\n                    }, state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n                }\n                case 7: {\n                    return [new State(map((todo_5) => {\n                        if (todo_5.Id === msg.fields[0]) {\n                            return new Todo(todo_5.Id, todo_5.Description, todo_5.CompletedOn, todo_5.CreatedOn, new TodoBeingEdited(todo_5.Id, msg.fields[1]));\n                        }\n                        else {\n                            return todo_5;\n                        }\n                    }, state.TodoList), state.NewTodo, state.Filter), Cmd_none()];\n                }\n                case 8: {\n                    return [new State(state.TodoList, state.NewTodo, msg.fields[0]), Cmd_none()];\n                }\n                default: {\n                    throw (new Error(\"The match cases were incomplete against type of \\u0027Msg\\u0027 at /Users/pat/Code/Tasks/src/Todo.fs\"));\n                }\n            }\n        }\n    }\n}\n\nconst appTitle = (() => {\n    const props = singleton([\"dangerouslySetInnerHTML\", {\n        __html: \"Elmish To-Do List\",\n    }]);\n    return createElement(\"h1\", createObj(Helpers_combineClasses(\"title\", props)));\n})();\n\nfunction inputField(state, dispatch) {\n    let props_2, props, value_6, props_7, props_5;\n    const props_9 = ofArray([[\"className\", \"has-addons\"], [\"children\", Interop_reactApi.Children.toArray([(props_2 = ofArray([[\"className\", \"is-expanded\"], [\"children\", Interop_reactApi.Children.toArray([(props = ofArray([[\"className\", \"is-medium\"], (value_6 = state.NewTodo, [\"ref\", (e) => {\n        if ((!(e == null)) ? (!equals(e.value, value_6)) : false) {\n            e.value = value_6;\n        }\n    }]), [\"onChange\", (ev) => {\n        dispatch(new Msg(0, ev.target.value));\n    }], [\"onKeyDown\", (ev_1) => {\n        PropHelpers_createOnKey(key_enter, (_arg1) => {\n            dispatch(new Msg(1));\n        }, ev_1);\n    }]]), createElement(\"input\", createObj(cons([\"type\", \"text\"], Helpers_combineClasses(\"input\", props)))))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"control\", props_2)))), (props_7 = singleton([\"children\", Interop_reactApi.Children.toArray([(props_5 = ofArray([op_PlusPlus([\"className\", \"is-primary\"], [\"className\", \"is-medium\"]), [\"onClick\", (_arg2) => {\n        dispatch(new Msg(1));\n    }], [\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-plus\"]),\n    })])]]), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_5))))])]), createElement(\"div\", createObj(Helpers_combineClasses(\"control\", props_7))))])]]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"field\", props_9)));\n}\n\nfunction renderEditForm(uneditedTodoDescription, todoBeingEdited, dispatch) {\n    let props_11, props_2, props, value_6, elms, props_5, props_8;\n    const elms_1 = singleton((props_11 = ofArray([[\"className\", \"is-grouped\"], [\"children\", Interop_reactApi.Children.toArray([(props_2 = ofArray([[\"className\", \"is-expanded\"], [\"children\", Interop_reactApi.Children.toArray([(props = ofArray([[\"className\", \"is-medium\"], (value_6 = todoBeingEdited.Description, [\"ref\", (e) => {\n        if ((!(e == null)) ? (!equals(e.value, value_6)) : false) {\n            e.value = value_6;\n        }\n    }]), [\"onChange\", (ev) => {\n        dispatch(new Msg(7, todoBeingEdited.Id, ev.target.value));\n    }]]), createElement(\"input\", createObj(cons([\"type\", \"text\"], Helpers_combineClasses(\"input\", props)))))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"control\", props_2)))), (elms = ofArray([(props_5 = ofSeq(delay(() => append_1(singleton_1([\"className\", \"is-primary\"]), delay(() => append_1((todoBeingEdited.Description === uneditedTodoDescription) ? singleton_1([\"disabled\", true]) : empty(), delay(() => append_1((todoBeingEdited.Description !== uneditedTodoDescription) ? singleton_1([\"onClick\", (_arg1) => {\n        dispatch(new Msg(5, todoBeingEdited.Id));\n    }]) : empty(), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-save\"]),\n    })])]))))))))), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_5)))), (props_8 = ofArray([[\"className\", \"is-warning\"], [\"onClick\", (_arg2) => {\n        dispatch(new Msg(4, todoBeingEdited.Id));\n    }], [\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-arrow-right\"]),\n    })])]]), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_8))))]), createElement(\"div\", {\n        className: \"buttons\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    }))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"field\", props_11)))));\n    return createElement(\"div\", {\n        className: \"box\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_1)),\n    });\n}\n\nfunction renderTodo(todo, dispatch) {\n    let props_15, elms, props, props_13, elms_1, props_4, props_7, props_10;\n    const elms_2 = singleton((props_15 = ofArray([op_PlusPlus([\"className\", \"is-mobile\"], [\"className\", \"is-vcentered\"]), [\"children\", Interop_reactApi.Children.toArray([(elms = singleton((props = ofSeq(delay(() => append_1((todo.CompletedOn != null) ? singleton_1([\"className\", \"has-text-grey-light\"]) : empty(), delay(() => append_1(singleton_1([\"className\", \"subtitle\"]), delay(() => singleton_1([\"children\", todo.Description]))))))), createElement(\"p\", createObj(Helpers_combineClasses(\"\", props))))), createElement(\"div\", {\n        className: \"column\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    })), (props_13 = ofArray([[\"className\", \"is-narrow\"], [\"children\", Interop_reactApi.Children.toArray([(elms_1 = ofArray([(props_4 = ofSeq(delay(() => append_1((todo.CompletedOn != null) ? singleton_1([\"className\", \"is-success\"]) : empty(), delay(() => append_1(singleton_1([\"onClick\", (_arg1) => {\n        dispatch(new Msg(2, todo.Id));\n    }]), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-check\"]),\n    })])]))))))), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_4)))), (props_7 = ofSeq(delay(() => append_1(singleton_1([\"className\", \"is-primary\"]), delay(() => append_1((todo.CompletedOn != null) ? singleton_1([\"disabled\", true]) : empty(), delay(() => append_1((todo.CompletedOn == null) ? singleton_1([\"onClick\", (_arg2) => {\n        dispatch(new Msg(6, todo.Id));\n    }]) : empty(), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-edit\"]),\n    })])]))))))))), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_7)))), (props_10 = ofArray([[\"className\", \"is-danger\"], [\"onClick\", (_arg3) => {\n        dispatch(new Msg(3, todo.Id));\n    }], [\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: join(\" \", [\"fas\", \"fa-trash\"]),\n    })])]]), createElement(\"button\", createObj(Helpers_combineClasses(\"button\", props_10))))]), createElement(\"div\", {\n        className: \"buttons\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_1)),\n    }))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_13))))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"columns\", props_15)))));\n    return createElement(\"div\", {\n        className: \"box\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_2)),\n    });\n}\n\nfunction todoList(state, dispatch) {\n    const sortedTodoList = sortBy((todo_1) => [todo_1.CompletedOn, todo_1.CreatedOn], filter((todo) => {\n        const matchValue = state.Filter;\n        switch (matchValue.tag) {\n            case 1: {\n                return todo.CompletedOn != null;\n            }\n            case 2: {\n                return todo.CompletedOn == null;\n            }\n            default: {\n                return true;\n            }\n        }\n    }, state.TodoList), {\n        Compare: (x, y) => compareArrays(x, y),\n    });\n    return createElement(\"ul\", {\n        children: Interop_reactApi.Children.toArray(Array.from(ofSeq(delay(() => map_1((todo_2) => {\n            const matchValue_1 = todo_2.TodoBeingEdited;\n            let pattern_matching_result, todoBeingEdited_1;\n            if (matchValue_1 != null) {\n                if (matchValue_1.Id === todo_2.Id) {\n                    pattern_matching_result = 0;\n                    todoBeingEdited_1 = matchValue_1;\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    return renderEditForm(todo_2.Description, todoBeingEdited_1, dispatch);\n                }\n                case 1: {\n                    return renderTodo(todo_2, dispatch);\n                }\n            }\n        }, sortedTodoList))))),\n    });\n}\n\nfunction renderFilterTabs(state, dispatch) {\n    let children, props_1, props_4, props_7;\n    const props_10 = ofArray([op_PlusPlus([\"className\", \"is-toggle\"], [\"className\", \"is-fullwidth\"]), [\"children\", Interop_reactApi.Children.toArray([(children = ofArray([(props_1 = ofSeq(delay(() => append_1(equals(state.Filter, new Filter(0)) ? singleton_1([\"className\", \"is-active\"]) : empty(), delay(() => append_1(singleton_1([\"onClick\", (_arg1) => {\n        dispatch(new Msg(8, new Filter(0)));\n    }]), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"a\", {\n        children: \"All\",\n    })])]))))))), createElement(\"li\", createObj(Helpers_combineClasses(\"\", props_1)))), (props_4 = ofSeq(delay(() => append_1(equals(state.Filter, new Filter(1)) ? singleton_1([\"className\", \"is-active\"]) : empty(), delay(() => append_1(singleton_1([\"onClick\", (_arg2) => {\n        dispatch(new Msg(8, new Filter(1)));\n    }]), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"a\", {\n        children: \"Completed\",\n    })])]))))))), createElement(\"li\", createObj(Helpers_combineClasses(\"\", props_4)))), (props_7 = ofSeq(delay(() => append_1(equals(state.Filter, new Filter(2)) ? singleton_1([\"className\", \"is-active\"]) : empty(), delay(() => append_1(singleton_1([\"onClick\", (_arg3) => {\n        dispatch(new Msg(8, new Filter(2)));\n    }]), delay(() => singleton_1([\"children\", Interop_reactApi.Children.toArray([createElement(\"a\", {\n        children: \"Not Completed\",\n    })])]))))))), createElement(\"li\", createObj(Helpers_combineClasses(\"\", props_7))))]), createElement(\"ul\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\n    }))])]]);\n    return createElement(\"div\", createObj(Helpers_combineClasses(\"tabs\", props_10)));\n}\n\nexport function App() {\n    const patternInput = useFeliz_React__React_useElmish_Static_645B1FB7(init, (msg, state) => update(msg, state), []);\n    const state_1 = patternInput[0];\n    const dispatch = patternInput[1];\n    return createElement(\"div\", {\n        style: {\n            padding: 20,\n        },\n        children: Interop_reactApi.Children.toArray([appTitle, inputField(state_1, dispatch), renderFilterTabs(state_1, dispatch), todoList(state_1, dispatch)]),\n    });\n}\n\n","import { join } from \"../fable-library.3.1.5/String.js\";\nimport { length, ofArray, map } from \"../fable-library.3.1.5/List.js\";\nimport { milliseconds, seconds, minutes, hours } from \"../fable-library.3.1.5/TimeSpan.js\";\nimport { map as map_1 } from \"../fable-library.3.1.5/Seq.js\";\n\nexport function PropHelpers_createClockValue(duration) {\n    let i_1;\n    return (join(\":\", map((i) => ((i < 10) ? (\"0\" + i) : i), ofArray([hours(duration), minutes(duration), seconds(duration)]))) + \".\") + (i_1 = (milliseconds(duration) | 0), (i_1 < 10) ? (\"0\" + i_1) : i_1);\n}\n\nexport function PropHelpers_createKeySplines(values) {\n    return join(\"; \", map_1((tupledArg) => ((((((tupledArg[0] + \" \") + tupledArg[1]) + \" \") + tupledArg[2]) + \" \") + tupledArg[3]), values));\n}\n\nexport function PropHelpers_createOnKey(key, handler, ev) {\n    const patternInput = key;\n    const pressedKey = patternInput[0];\n    const matchValue = [patternInput[1], patternInput[2]];\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[1]) {\n            if (((pressedKey.toLocaleLowerCase() === ev.key.toLocaleLowerCase()) ? ev.ctrlKey : false) ? ev.shiftKey : false) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            handler(ev);\n            break;\n        }\n        case 1: {\n            let pattern_matching_result_1;\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    pattern_matching_result_1 = 1;\n                }\n                else if ((pressedKey.toLocaleLowerCase() === ev.key.toLocaleLowerCase()) ? ev.ctrlKey : false) {\n                    pattern_matching_result_1 = 0;\n                }\n                else {\n                    pattern_matching_result_1 = 1;\n                }\n            }\n            else {\n                pattern_matching_result_1 = 1;\n            }\n            switch (pattern_matching_result_1) {\n                case 0: {\n                    handler(ev);\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_2;\n                    if (matchValue[0]) {\n                        pattern_matching_result_2 = 1;\n                    }\n                    else if (matchValue[1]) {\n                        if ((pressedKey.toLocaleLowerCase() === ev.key.toLocaleLowerCase()) ? ev.shiftKey : false) {\n                            pattern_matching_result_2 = 0;\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_2 = 1;\n                    }\n                    switch (pattern_matching_result_2) {\n                        case 0: {\n                            handler(ev);\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_3;\n                            if (matchValue[0]) {\n                                pattern_matching_result_3 = 1;\n                            }\n                            else if (matchValue[1]) {\n                                pattern_matching_result_3 = 1;\n                            }\n                            else if (pressedKey.toLocaleLowerCase() === ev.key.toLocaleLowerCase()) {\n                                pattern_matching_result_3 = 0;\n                            }\n                            else {\n                                pattern_matching_result_3 = 1;\n                            }\n                            switch (pattern_matching_result_3) {\n                                case 0: {\n                                    handler(ev);\n                                    break;\n                                }\n                                case 1: {\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            break;\n        }\n    }\n}\n\nexport function PropHelpers_createPointsFloat(coordinates) {\n    return join(\" \", map_1((tupledArg) => ((tupledArg[0] + \",\") + tupledArg[1]), coordinates));\n}\n\nexport function PropHelpers_createPointsInt(coordinates) {\n    return join(\" \", map_1((tupledArg) => ((tupledArg[0] + \",\") + tupledArg[1]), coordinates));\n}\n\nexport function PropHelpers_createSvgPathFloat(path) {\n    return join(\"\\n\", map_1((tupledArg) => {\n        const cmdType = tupledArg[0];\n        const cmds = tupledArg[1];\n        if (length(cmds) === 0) {\n            return cmdType;\n        }\n        else {\n            return (cmdType + \" \") + join(\" \", map_1((arg) => join(\",\", arg), cmds));\n        }\n    }, path));\n}\n\nexport function PropHelpers_createSvgPathInt(path) {\n    return join(\"\\n\", map_1((tupledArg) => {\n        const cmdType = tupledArg[0];\n        const cmds = tupledArg[1];\n        if (length(cmds) === 0) {\n            return cmdType;\n        }\n        else {\n            return (cmdType + \" \") + join(\" \", map_1((arg) => join(\",\", arg), cmds));\n        }\n    }, path));\n}\n\n","import * as global$ from \"./styles/global.scss\";\nimport { render } from \"react-dom\";\nimport { createElement } from \"react\";\nimport { App } from \"./Todo.fs.js\";\n\n\nrender(createElement(App, null), document.getElementById(\"feliz-app\"));\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {}\n","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\nvar deferredModules = [\n\t[590,216]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}